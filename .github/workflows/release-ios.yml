name: Release Flutter (iOS)
on:
  # Enable manual run
  workflow_dispatch:
    inputs:
      version:
        description: "Tag to create (e.g. v2.10.0). Must include 'v' and must match pubspec"
        required: true
        default: "v2.10.0"
        type: string
      environment:
        type: choice
        description: "Which environment are you using?"
        required: true
        default: "development"
        options:
          - development
          - production

# Declare default permissions as read only.
permissions: read-all

jobs:
  macos-build:
    name: Create ios build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Install Deps
        run: flutter pub get

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.P12_BASE64 }}
          BUILD_CERTIFICATE_DEV_BASE64: ${{ secrets.P12_DEV_BASE64 }}
          BUILD_CERT_BASE64: ${{ secrets.CERT_BASE64 }}
          BUILD_CERT_DEV_BASE64: ${{ secrets.CERT_DEV_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
          BUILD_PROVISION_PROFILE_DEV_BASE64: ${{ secrets.PROVISIONING_PROFILE_DEV_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          CERTIFICATE_DEV_PATH=$RUNNER_TEMP/build_certificate_dev.p12
          CERT_PATH=$RUNNER_TEMP/ios_distribution.cer
          CERT_DEV_PATH=$RUNNER_TEMP/development.cer
          PP_PATH=$RUNNER_TEMP/flutter-template-ns-appstore.mobileprovision
          PP_DEV_PATH=$RUNNER_TEMP/flutter-template-ns-dev.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_CERTIFICATE_DEV_BASE64" | base64 --decode --output $CERTIFICATE_DEV_PATH
          echo -n "$BUILD_CERT_BASE64" | base64 --decode --output $CERT_PATH
          echo -n "$BUILD_CERT_DEV_BASE64" | base64 --decode --output $CERT_DEV_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
          echo -n "$BUILD_PROVISION_PROFILE_DEV_BASE64" | base64 --decode --output $PP_DEV_PATH
          
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security import $CERTIFICATE_DEV_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security import $CERT_PATH -P "$P12_PASSWORD" -A -t cert -k $KEYCHAIN_PATH
          security import $CERT_DEV_PATH -P "$P12_PASSWORD" -A -t cert -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_DEV_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Build
        run: flutter build ipa --release --export-options-plist=ios/ExportOptions-${{ github.event.inputs.environment }}.plist

      - name: Push APK to Releases
        uses: ncipollo/release-action@v1
        with:
          name: ${{ github.event.inputs.version }}_ios_${{ github.event.inputs.environment }}
          artifacts: "build/ios/ipa/*.ipa"
          tag: ${{ github.event.inputs.version }}
          token: ${{ secrets.FLUTTER_BOILERPLATE_BOT_TOKEN }}
          prerelease: ${{ github.event.inputs.environment != 'production' }}

      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/flutter-template-ns-appstore.mobileprovision
          rm ~/Library/MobileDevice/Provisioning\ Profiles/flutter-template-ns-dev.mobileprovision
